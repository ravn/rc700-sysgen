;
; ЩЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЛ
; К This file is generated by The Interactive Disassembler (IDA) FW К
; К Copyright (c) 1997 by DataRescue sprl, <ida@datarescue.com>     К
; К Professional version of IDA is at http://www.idapro.com         К
; ШЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭМ
;


; File Name			  g:sysgen.com
; Format			  COM File
; Base Address:	1000h Range: 10100h - 10680h Loaded length: 0580h

; Processor:	    z80
; Target assembler: X-M-80 by Leo Sandy
.Z80

;ЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭ

; segment 'seg000'
		cseg
		org 100h


;лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл

;		S u b r	o u t i	n e

start:
		jp	startx
; End of function start

;ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
aCopyrightC1978:db 20h
aCopyrightC19_0:db 'COPYRIGHT (C) 1978, DIGITAL RESEARCH                        '
		db 'COPYRIGHT (C) 1982, A/S REGNECENTRALEN AF 1979 '
		db    2	;  
spt:		db 0			; DATA XREF: getput+Ew	getput+4Ar
					; ...
rc_diskformat:	db 8			; DATA XREF: rc_track1+1Dr
					; getput+E9w ...
byte_0_172:	db 10h			; DATA XREF: rc_track1+11r
					; getput+EEw
byte_0_173:	db 18h			; DATA XREF: rc_track1+17r
					; getput+F3w
byte_0_174:	db 68h			; DATA XREF: getput+D3r getput+F8w
byte_0_175:	db 78h			; DATA XREF: getput+Br	getput+FDw
byte_0_176:	db 19h			; DATA XREF: rc_track1+Dr getput+34r
					; ...
byte_0_177:	db 34h			; DATA XREF: getput+3Br getput+107w
byte_0_178:	db 1Ah			; DATA XREF: getput+42r getput+10Cw
maxitrans:	db 0
		db    2	;  
		db    4	;  
		db    6	;  
		db    8	;  
		db  0Ah	;  
		db  0Ch	;  
		db  0Eh	;  
		db    1	;  
		db    3	;  
		db    5	;  
		db    7	;  
		db    9	;  
		db  0Bh	;  
		db  0Dh	;  
		db  0Fh	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
asc_0_199:	db ' !"#$'
unk_0_19E:	db  25h	; %
		db  26h	; &
unk_0_1A0:	db  27h	; '
		db  28h	; (
		db  29h	; )
		db  2Ah	; *
		db  2Bh	; +
		db  2Ch	; ,
byte_0_1A6:	db 2Dh
		db  2Eh	; .
		db  2Fh	; /
		db  30h	; 0
		db  31h	; 1
		db  32h	; 2
		db  33h	; 3
		db  34h	; 4
		db  35h	; 5
		db  36h	; 6
		db  37h	; 7
		db  38h	; 8
		db  39h	; 9
		db  3Ah	; :
		db  3Bh	; ;
		db  3Ch	; <
		db  3Dh	; =
		db  3Eh	; >
		db  3Fh	; ?
minitrans:	db    0	;  
		db    4	;  
		db    8	;  
		db 0Ch
		db  10h	;  
		db  14h	;  
		db  18h	;  
		db    1	;  
		db    5	;  
		db    9	;  
		db  0Dh	;  
		db  11h	;  
		db  15h	;  
		db  19h	;  
		db    2	;  
		db    6	;  
		db  0Ah	;  
		db  0Eh	;  
		db  12h	;  
		db  16h	;  
		db    3	;  
		db    7	;  
		db  0Bh	;  
		db  0Fh	;  
		db  13h	;  
		db  17h	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db  34h	; 4
		db  35h	; 5
		db  36h	; 6
		db  37h	; 7
		db  38h	; 8
		db  39h	; 9
		db  3Ah	; :
		db  3Bh	; ;
		db  3Ch	; <
		db  3Dh	; =
		db  3Eh	; >
		db  3Fh	; ?
		db  40h	; @
		db  41h	; A
		db  42h	; B
		db  43h	; C
		db  44h	; D
		db  45h	; E
		db  46h	; F
		db  47h	; G
		db  48h	; H
		db  49h	; I
		db  4Ah	; J
		db  4Bh	; K
		db  4Ch	; L
		db  4Dh	; M
		db  4Eh	; N
		db  4Fh	; O
		db  50h	; P
		db  51h	; Q
		db  52h	; R
		db  53h	; S
		db  54h	; T
		db  55h	; U
		db  56h	; V
		db  57h	; W
		db  58h	; X
		db  59h	; Y
		db  5Ah	; Z
		db  5Bh	; [
		db  5Ch	; \
		db  5Dh	; ]
		db  5Eh	; ^
		db  5Fh	; _
		db  60h	; `
		db  61h	; a
		db  62h	; b
		db  63h	; c
		db  64h	; d
		db  65h	; e
		db  66h	; f
		db  67h	; g

;лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл

;		S u b r	o u t i	n e

multsec:				; CODE XREF: getput+7Dp getput+C8p
		ld	l, a
		ld	h, 0
		add	hl, hl
		add	hl, hl
		add	hl, hl
		add	hl, hl
		add	hl, hl
		add	hl, hl
		add	hl, hl
		ret	
; End of function multsec


;лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл

;		S u b r	o u t i	n e

getchar:				; CODE XREF: getput+9Cp getput+170p
					; ...
		ld	c, 1
		call	5
		cp	61h
		ret	c
		cp	7Bh
		ret	nc
		and	5Fh
		ret	
; End of function getchar


;лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл

;		S u b r	o u t i	n e

putchar:				; CODE XREF: crlf+2p crlf+7p ...
		ld	e, a
		ld	c, 2
		call	5
		ret	
; End of function putchar


;лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл

;		S u b r	o u t i	n e

crlf:					; CODE XREF: crmsg+1p getput+A4p
					; ...
		ld	a, 0Dh
		call	putchar
		ld	a, 0Ah
		call	putchar
		ret	
; End of function crlf


;лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл

;		S u b r	o u t i	n e

crmsg:					; CODE XREF: getput+12Ap getput+164p
					; ...
		push	hl
		call	crlf
		pop	hl
; End of function crmsg


;лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл

;		S u b r	o u t i	n e

outmsg:					; CODE XREF: outmsg+9j	getput+99p
					; ...
		ld	a, (hl)
		or	a
		ret	z
		push	hl
		call	putchar
		pop	hl
		inc	hl
		jp	outmsg
; End of function outmsg


;лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл

;		S u b r	o u t i	n e

sel:					; CODE XREF: rc_track1+38p
					; getput+18Cp ...
		ld	(sdisk), a
		ld	c, a
		ld	hl, (1)
		ld	de, 18h
		add	hl, de
		jp	(hl)
; End of function sel


;лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл

;		S u b r	o u t i	n e

trk:					; CODE XREF: getput+1Cp
		ld	hl, (1)
		ld	de, 1Bh
		add	hl, de
		jp	(hl)
; End of function trk


;лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл

;		S u b r	o u t i	n e

sec:					; CODE XREF: getput+77p
		ld	hl, (1)
		ld	de, 1Eh
		add	hl, de
		jp	(hl)
; End of function sec


;лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл

;		S u b r	o u t i	n e

dma:					; CODE XREF: getput+87p getput+14Cp
		ld	hl, (1)
		ld	de, 21h
		add	hl, de
		jp	(hl)
; End of function dma


;лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл

;		S u b r	o u t i	n e

read:					; CODE XREF: getput+BBp
		ld	hl, (1)
		ld	de, 24h
		add	hl, de
		jp	(hl)
; End of function read


;лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл

;		S u b r	o u t i	n e

write:					; CODE XREF: getput+B5p
		ld	hl, (1)
		ld	de, 27h
		add	hl, de
		ld	c, 2
		jp	(hl)
; End of function write


;лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл

;		S u b r	o u t i	n e

dread:					; CODE XREF: getput+13Ap getput+152p
		ld	c, 14h
		jp	5
; End of function dread


;лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл

;		S u b r	o u t i	n e

open:					; CODE XREF: getput+120p
		ld	c, 0Fh
		jp	5
; End of function open


;лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл

;		S u b r	o u t i	n e

rc_track1:				; CODE XREF: getput+24p
		ld	a, (track)
		cp	1
		jp	nz, loc_0_2BA
		ld	a, (sector)
		inc	a
		ld	b, a
		ld	a, (byte_0_176)
		cp	b
		ld	a, (byte_0_172)
		jp	nc, loc_0_2BD
		ld	a, (byte_0_173)
		jp	loc_0_2BD
;ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

loc_0_2BA:				; CODE XREF: rc_track1+5j
		ld	a, (rc_diskformat)

loc_0_2BD:				; CODE XREF: rc_track1+14j
					; rc_track1+1Aj
		ld	hl, (1)
		ld	de, 34h
		add	hl, de
		push	af
		ld	a, (sdisk)
		ld	b, a
		add	a, l
		ld	l, a
		jp	nc, loc_0_2CF
		inc	h

loc_0_2CF:				; CODE XREF: rc_track1+2Ej
		pop	af
		ld	c, (hl)
		cp	c
		ret	z
		ld	(hl), a
		ld	a, b
		call	sel
		ret	
; End of function rc_track1


;лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл

;		S u b r	o u t i	n e

getput:					; CODE XREF: getput+1A7p getput+1EBp
		ld	hl, 900h
		ld	(dmaddr), hl
		ld	a, 3
		ld	(track), a
		ld	a, (byte_0_175)
		ld	(spt), a

rwtrk:					; CODE XREF: getput+D9j
		ld	hl, 61Ah
		dec	(hl)
		jp	z, endrw
		ld	c, (hl)
		dec	c
		ld	b, 0
		call	trk
		ld	a, 0FFh
		ld	(sector), a

rwsec:					; CODE XREF: getput+A7j getput+BFj
		call	rc_track1
		ld	a, (track)
		cp	1
		jp	nz, rwsec2
		ld	a, (sector)
		inc	a
		ld	b, a
		ld	a, (byte_0_176)
		cp	b
		jp	nc, rwsec2
		ld	a, (byte_0_177)
		cp	b
		jp	c, rwsec2
		ld	a, (byte_0_178)
		add	a, b
		dec	a
		ld	(sector), a

rwsec2:					; CODE XREF: getput+2Cj getput+38j
					; ...
		ld	a, (spt)
		ld	hl, 61Bh
		inc	(hl)
		cp	(hl)
		jp	z, endtrk
		ld	hl, 61Bh

rc1:
		ld	c, (hl)
		ld	b, 0
		ld	a, (track)
		cp	1
		jp	nz, rwsec1
		ld	e, (hl)
		ld	d, 0
		in	a, (14h)
		and	80h		; maxi?
		ld	hl, 179h
		jp	nz, rc2
		ld	hl, 1B9h

rc2:					; CODE XREF: getput+6Dj
		ld	b, (hl)
		add	hl, de
		ld	c, (hl)

rwsec1:					; CODE XREF: getput+60j
		push	bc
		call	sec
		pop	bc
		ld	a, c
		sub	b
		call	multsec
		ex	de, hl
		ld	hl, (dmaddr)
		add	hl, de
		ld	b, h
		ld	c, l
		call	dma
		xor	a
		ld	(retry), a

trysec:					; CODE XREF: getput+C2j
		ld	a, (retry)
		cp	0Ah
		jp	c, tryok
		ld	hl, 592h
		call	outmsg
		call	getchar
		cp	0Dh
		jp	nz, reboot
		call	crlf
		jp	rwsec
;ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

tryok:					; CODE XREF: getput+93j
		inc	a
		ld	(retry), a
		ld	a, (rw)
		or	a
		jp	z, tryread
		call	write
		jp	chkrw
;ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

tryread:				; CODE XREF: getput+B2j
		call	read

chkrw:					; CODE XREF: getput+B8j
		or	a
		jp	z, rwsec
		jp	trysec
;ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

endtrk:					; CODE XREF: getput+52j
		ld	a, (spt)
		call	multsec
		ex	de, hl
		ld	hl, (dmaddr)
		add	hl, de
		ld	(dmaddr), hl
		ld	a, (byte_0_174)
		ld	(spt), a
		jp	rwtrk
;ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

endrw:					; CODE XREF: getput+15j
		ret	
;ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

startx:					; CODE XREF: startj
		ld	sp, 640h
		in	a, (14h)
		and	80h
		jp	z, rc_notmaxi
		ld	a, 10h
		ld	(rc_diskformat), a
		ld	a, 0
		ld	(byte_0_172), a
		ld	a, 8
		ld	(byte_0_173), a
		ld	a, 40h
		ld	(byte_0_174), a
		ld	a, 48h
		ld	(byte_0_175), a
		ld	a, 0Fh
		ld	(byte_0_176), a
		ld	a, 20h
		ld	(byte_0_177), a
		ld	a, 10h
		ld	(byte_0_178), a

rc_notmaxi:				; CODE XREF: getput+E4j
		ld	hl, 4EFh
		call	outmsg
		ld	a, (5Dh)
		cp	20h
		jp	z, getsys
		ld	de, 5Ch
		call	open
		inc	a
		jp	nz, rdok
		ld	hl, 5EBh
		call	crmsg
		jp	reboot
;ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

rdok:					; CODE XREF: getput+124j
		xor	a
		ld	(7Ch), a
		ld	c, 10h

prerd:					; CODE XREF: getput+143j
		push	bc
		ld	de, 5Ch
		call	dread
		pop	bc
		or	a
		jp	nz, badrd
		dec	c
		jp	nz, prerd
		ld	hl, 900h

rdinp:					; CODE XREF: getput+15Ej
		push	hl
		ld	b, h
		ld	c, l
		call	dma
		ld	de, 5Ch
		call	dread
		pop	hl
		or	a
		jp	nz, putsys
		ld	de, 80h
		add	hl, de
		jp	rdinp
;ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

badrd:					; CODE XREF: getput+13Fj
		ld	hl, 602h
		call	crmsg
		jp	reboot
;ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

getsys:					; CODE XREF: getput+11Aj getput+182j
		ld	hl, 4FEh
		call	crmsg
		call	getchar
		cp	0Dh
		jp	z, putsys
		sub	41h
		cp	2
		jp	c, getc
		call	baddisk
		jp	getsys
;ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

getc:					; CODE XREF: getput+17Cj
		add	a, 41h
		ld	(gdisk), a
		sub	41h
		call	sel
		call	crlf
		ld	hl, 524h
		call	outmsg
		call	getchar
		cp	0Dh
		jp	nz, reboot
		call	crlf
		xor	a
		ld	(rw), a
		call	getput
		ld	hl, 5B9h
		call	outmsg

putsys:					; CODE XREF: getput+157j getput+175j
					; ...
		ld	hl, 542h
		call	crmsg
		call	getchar
		cp	0Dh
		jp	z, reboot
		sub	41h
		cp	2
		jp	c, putc
		call	baddisk
		jp	putsys
;ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

putc:					; CODE XREF: getput+1C2j
		add	a, 41h
		ld	(pdisk), a
		sub	41h
		call	sel
		ld	hl, 56Fh
		call	crmsg
		call	getchar
		cp	0Dh
		jp	nz, reboot
		call	crlf
		ld	hl, 61Ch
		ld	(hl), 1
		call	getput
		ld	hl, 5B9h
		call	outmsg
		jp	putsys
;ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ

reboot:					; CODE XREF: getput+A1j getput+12Dj
					; ...
		ld	a, (rc_diskformat)
		ld	hl, (1)
		ld	de, 34h
		add	hl, de
		ld	(hl), a
		inc	hl
		ld	(hl), a
		ld	a, 0
		call	sel
		call	crlf
		jp	0
; End of function getput


;лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл

;		S u b r	o u t i	n e

baddisk:				; CODE XREF: getput+17Fp getput+1C5p
		ld	hl, 5CBh
		call	crmsg
		ret	
; End of function baddisk

;ФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФФ
signon:		db 'SYSGEN VER 2.0',0
askget:		db 'SOURCE DRIVE NAME (OR RETURN TO SKIP)',0
getmsg:		db 'SOURCE ON '
gdisk:		db 0E1h			; DATA XREF: getput+187w
asc_0_52F:	db ', '
aThenTypeRetu_0:db 'THEN TYPE RETURN',0
askput:		db 'DESTINATION DRIVE NAME (OR RETURN TO REBOOT)',0
putmsg:		db 'DESTINATION ON '
pdisk:		db 1Ch			; DATA XREF: getput+1CDw
aThenTypeReturn:db ', THEN TYPE RETURN',0
errmsg:		db 'PERMANENT ERROR, TYPE RETURN TO IGNORE',0
done:		db 'FUNCTION COMPLETE',0
qdisk:		db 'INVALID DRIVE NAME (USE A OR B)',0
nofile:		db 'NO SOURCE FILE ON DISK',0
badfile:	db 'SOURCE FILE INCOMPLETE',0
sdisk:		db 0			; DATA XREF: selw rc_track1+28r
track:		db 0			; DATA XREF: rc_track1r getput+8w
					; ...
sector:		db 0			; DATA XREF: rc_track1+8r getput+21w
					; ...
rw:		db 0			; DATA XREF: getput+AEr getput+1A4w
dmaddr:		dw 0			; DATA XREF: getput+3w	getput+81r
					; ...
retry:		db 0			; DATA XREF: getput+8Bw getput+8Er
					; ...
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  

; end of 'seg000'


		end start
